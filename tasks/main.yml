---
# tasks file for backup-manager

- name: Remove shell access on {{ bm_user }} user and add syslog group
  user:
    name: "{{ bm_user }}"
    state: "present"
    shell: "/usr/sbin/nologin"
  when: bm_user_remove_shell

- name: Install required packages
  apt: name="{{ item }}" state=latest
  with_items: "{{ bm_packages }}"

- name: Render /etc/backup-manager.conf
  template: src=backup-manager.conf.j2 dest=/etc/backup-manager.conf

#HOME is unset to avoid using .my.cnf config : https://github.com/sukria/Backup-Manager/issues/12
- name: Creates cronjob to execute backup-manager
  cron:
    day: "{{ item.startday | default('*') }}"
    hour: "{{ item.starthour }}"
    minute: "{{ item.startmin | default('0') }}"
    name: "backup-manager_backup tag='{{ item.tag }}'"
    user: "root"
    job: "HOME="" /usr/sbin/backup-manager --verbose 2>&1 | logger -t {{ bm_bkpcron_rsyslog_progname }}"
  when: (item.disable is not defined or not item.disable) and item.tag is defined and item.starthour is defined
  with_items: "{{ bm_backup_schedule }}"

- name : Set default path if bm_upload_destination is empty
  set_fact:
    bm_upload_destination: "{{ ansible_hostname }}"
  when: not bm_upload_destination

- name: Creates cronjob to upload on S3
  cron:
    day: "{{ item.startday | default('*') }}"
    hour: "{{ item.starthour }}"
    minute: "{{ item.startmin | default('0') }}"
    name: "backup-manager_backup tag='{{ item.tag }}'"
    user: "{{ bm_user }}"
    job: "/usr/bin/s3cmd sync -c /home/{{ bm_user }}/.s3cfg --skip-existing --delete-removed {{ bm_repository_root }} s3://{{ bm_upload_s3_bucket }}/{{ bm_upload_destination }}/ 2>&1 | logger -t {{ bm_s3cron_rsyslog_progname }}"
  when: (item.disable is not defined or not item.disable) and item.tag is defined and item.starthour is defined
  with_items: "{{ bm_upload_s3_schedule }}"

- name: Activate backup manager customs logs in syslog
  lineinfile:
    line: "if $programname == '{{ item }}' then /var/log/{{ item }}.log"
    regexp: "^if \\$programname"
    dest: "/etc/rsyslog.d/{{ item }}.conf"
    create: true
  with_items:
    - "{{ bm_bkpcron_rsyslog_progname }}"
    - "{{ bm_s3cron_rsyslog_progname }}"
  notify: rsyslog restart
